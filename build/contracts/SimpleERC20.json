{
  "contractName": "SimpleERC20",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "initialBalance",
          "type": "uint256"
        },
        {
          "internalType": "address payable",
          "name": "feeReceiver",
          "type": "address"
        }
      ],
      "stateMutability": "payable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "generator",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "version",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"initialBalance\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"feeReceiver\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"generator\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"ERC20 Generator (https://vittominacori.github.io/erc20-generator)\",\"details\":\"Implementation of the SimpleERC20\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"generator()\":{\"details\":\"Returns the token generator tool.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"},\"version()\":{\"details\":\"Returns the token generator version.\"}},\"title\":\"SimpleERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Y/Github/erc20-generator/contracts/token/ERC20/SimpleERC20.sol\":\"SimpleERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Y/Github/erc20-generator/contracts/service/ServicePayer.sol\":{\"keccak256\":\"0x8695e6763f09359b421ce994fb44b3cd6cda16d7255ff39c76232b6d611e36e4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4b696ac744b49b08ea712a3eb7902f4e093dd7d12f42daa91736446125cff551\",\"dweb:/ipfs/QmSXHGkDB6eYTWtsxChQRYbSE6FcjYyYFJmAUWtohKfv4X\"]},\"/Y/Github/erc20-generator/contracts/token/ERC20/SimpleERC20.sol\":{\"keccak256\":\"0xdfd1c9f0fa93df2c877e4f9184ae247567867f1cda57e10c58f7c8a92e43a3bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ca91d431d2b085ae9eff8f15f057d43f25225b457f6517a291fce3e57172779\",\"dweb:/ipfs/QmNbMyXxfMgHz3QwnBY62MN4cQ9JrfDGooQF94teVZzk6G\"]},\"/Y/Github/erc20-generator/contracts/utils/GeneratorCopyright.sol\":{\"keccak256\":\"0x87bd0570a69c1c70e8b4f1954ec464cdb8d654817ef324ef6fd753b3f0a8f667\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7f6b3ca213d89ca7f6fe8f8dae901a85e96e910cc38e956480e403f5e69e08d\",\"dweb:/ipfs/QmeaMBK5a2Wat6PZ31qQVBrJLREKtUZ6dPhH2B2jeCKPP1\"]},\"@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xe22a1fc7400ae196eba2ad1562d0386462b00a6363b742d55a2fd2021a58586f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4a635cec58fb4141a16cfd408f1a21ac944c335a3beaba541c35d2e95c04536f\",\"dweb:/ipfs/QmXWcz73UenN1ji8jiWMbzxHjjfLbNQwLVKTEB5zNFE34K\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x36b5ca4eabe888b39b10973621ca0dcc9b1508f8d06db9ddf045d7aa7c867d4a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ccbd79e8d556aa7011babb0e5d1e55a966add74853e7ba0274ff184bd96ef002\",\"dweb:/ipfs/QmV28ozNRUFDiDUMvCwcFmLTQPG6nfvgeKr4cmbHWoegtH\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xbd74f587ab9b9711801baf667db1426e4a03fd2d7f15af33e0e0d0394e7cef76\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2d0913dfbfce90d170df0d496ad7596c0778518e5fa7aba6c32562522546f66b\",\"dweb:/ipfs/QmR6B8nLj2PJf5e1JWD9Nk7ErkAwkqUwadCnvE82FJr1RU\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ded47ec7c96750f9bd04bbbc84f659992d4ba901cb7b532a52cd468272cf378f\",\"dweb:/ipfs/QmfBrGtQP7rZEqEg6Wz6jh2N2Kukpj1z5v3CGWmAqrzm96\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100cf5760003560e01c806354fd4d501161008c57806395d89b411161006657806395d89b4114610261578063a457c2d714610269578063a9059cbb14610295578063dd62ed3e146102c1576100cf565b806354fd4d501461022b57806370a08231146102335780637afa1eed14610259576100cf565b806306fdde03146100d4578063095ea7b31461015157806318160ddd1461019157806323b872dd146101ab578063313ce567146101e157806339509351146101ff575b600080fd5b6100dc6102ef565b6040805160208082528351818301528351919283929083019185019080838360005b838110156101165781810151838201526020016100fe565b50505050905090810190601f1680156101435780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61017d6004803603604081101561016757600080fd5b506001600160a01b038135169060200135610385565b604080519115158252519081900360200190f35b6101996103a2565b60408051918252519081900360200190f35b61017d600480360360608110156101c157600080fd5b506001600160a01b038135811691602081013590911690604001356103a8565b6101e961042f565b6040805160ff9092168252519081900360200190f35b61017d6004803603604081101561021557600080fd5b506001600160a01b038135169060200135610438565b6100dc610486565b6101996004803603602081101561024957600080fd5b50356001600160a01b03166104e7565b6100dc610502565b6100dc610522565b61017d6004803603604081101561027f57600080fd5b506001600160a01b038135169060200135610583565b61017d600480360360408110156102ab57600080fd5b506001600160a01b0381351690602001356105eb565b610199600480360360408110156102d757600080fd5b506001600160a01b03813581169160200135166105ff565b60038054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561037b5780601f106103505761010080835404028352916020019161037b565b820191906000526020600020905b81548152906001019060200180831161035e57829003601f168201915b5050505050905090565b600061039961039261068b565b848461068f565b50600192915050565b60025490565b60006103b584848461077b565b610425846103c161068b565b610420856040518060600160405280602881526020016109de602891396001600160a01b038a166000908152600160205260408120906103ff61068b565b6001600160a01b0316815260208101919091526040016000205491906108d6565b61068f565b5060019392505050565b60055460ff1690565b600061039961044561068b565b84610420856001600061045661068b565b6001600160a01b03908116825260208083019390935260409182016000908120918c16815292529020549061062a565b60068054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561037b5780601f106103505761010080835404028352916020019161037b565b6001600160a01b031660009081526020819052604090205490565b60606040518060600160405280602f8152602001610a4f602f9139905090565b60048054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561037b5780601f106103505761010080835404028352916020019161037b565b600061039961059061068b565b8461042085604051806060016040528060258152602001610a7e60259139600160006105ba61068b565b6001600160a01b03908116825260208083019390935260409182016000908120918d168152925290205491906108d6565b60006103996105f861068b565b848461077b565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b600082820183811015610684576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b3390565b6001600160a01b0383166106d45760405162461bcd60e51b8152600401808060200182810382526024815260200180610a2b6024913960400191505060405180910390fd5b6001600160a01b0382166107195760405162461bcd60e51b81526004018080602001828103825260228152602001806109966022913960400191505060405180910390fd5b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b0383166107c05760405162461bcd60e51b8152600401808060200182810382526025815260200180610a066025913960400191505060405180910390fd5b6001600160a01b0382166108055760405162461bcd60e51b81526004018080602001828103825260238152602001806109736023913960400191505060405180910390fd5b61081083838361096d565b61084d816040518060600160405280602681526020016109b8602691396001600160a01b03861660009081526020819052604090205491906108d6565b6001600160a01b03808516600090815260208190526040808220939093559084168152205461087c908261062a565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b600081848411156109655760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561092a578181015183820152602001610912565b50505050905090810190601f1680156109575780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b50505056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737368747470733a2f2f766974746f6d696e61636f72692e6769746875622e696f2f65726332302d67656e657261746f7245524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa26469706673582212201130ec92512240c71416accecf240ae098c92263acd6724816726d5740df41a264736f6c63430007060033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "365:470:13:-:0;;;448:384;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;448:384:13;;;;;;;;;;-1:-1:-1;448:384:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;448:384:13;;;;;;;;;;-1:-1:-1;448:384:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;448:384:13;;;;;;;;;;;;;392:75:17;;;;;;;;-1:-1:-1;;;392:75:17;;;;270:146:5;;;;;;;;;;;-1:-1:-1;;;270:146:5;;;;2017:13:24;;448:384:13;;-1:-1:-1;448:384:13;-1:-1:-1;448:384:13;;;;614:4;;620:6;;2017:13:24;;:5;;:13;;;;:::i;:::-;-1:-1:-1;2040:17:24;;;;:7;;:17;;;;;:::i;:::-;-1:-1:-1;;2067:9:24;:14;;-1:-1:-1;;2067:14:24;2079:2;2067:14;;;-1:-1:-1;355:53:5;;-1:-1:-1;;;355:53:5;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;355:22:5;;;;;385:9;;396:11;;355:53;;;;;;;;;;;;;;;;2067:9:24;355:53:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;440:19:17;;;;-1:-1:-1;440:8:17;;-1:-1:-1;440:19:17;;;;-1:-1:-1;440:19:17;-1:-1:-1;440:19:17;;-1:-1:-1;440:19:17:i;:::-;;392:75;736:1:13::2;719:14;:18;711:65;;;;-1:-1:-1::0;;;711:65:13::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;789:35;795:12;:10;:12::i;:::-;809:14:::0;789:5:::2;:35::i;:::-;448:384:::0;;;;365:470;;598:104:30;685:10;598:104;:::o;7817:370:24:-;-1:-1:-1;;;;;7900:21:24;;7892:65;;;;;-1:-1:-1;;;7892:65:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;7968:49;7997:1;8001:7;8010:6;7968:20;:49::i;:::-;8043:24;8060:6;8043:12;;:16;;;;;;:24;;;;:::i;:::-;8028:12;:39;-1:-1:-1;;;;;8098:18:24;;:9;:18;;;;;;;;;;;;:30;;8121:6;;8098:22;;;;;:30;;:::i;:::-;-1:-1:-1;;;;;8077:18:24;;:9;:18;;;;;;;;;;;:51;;;;8143:37;;;;;;;8077:18;;:9;;8143:37;;;;;;;;;;7817:370;;:::o;10686:92::-;;;;:::o;2682:175:23:-;2740:7;2771:5;;;2794:6;;;;2786:46;;;;;-1:-1:-1;;;2786:46:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;2849:1;2682:175;-1:-1:-1;;;2682:175:23:o;365:470:13:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;365:470:13;;;-1:-1:-1;365:470:13;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "365:470:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2153:89:24;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4229:166;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;4229:166:24;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;3220:106;;;:::i;:::-;;;;;;;;;;;;;;;;4862:317;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;4862:317:24;;;;;;;;;;;;;;;;;:::i;3071:89::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;5574:215;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;5574:215:24;;;;;;;;:::i;709:89:17:-;;;:::i;3384:125:24:-;;;;;;;;;;;;;;;;-1:-1:-1;3384:125:24;-1:-1:-1;;;;;3384:125:24;;:::i;540:93:17:-;;;:::i;2355::24:-;;;:::i;6276:266::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;6276:266:24;;;;;;;;:::i;3712:172::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;3712:172:24;;;;;;;;:::i;3942:149::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;3942:149:24;;;;;;;;;;:::i;2153:89::-;2230:5;2223:12;;;;;;;;-1:-1:-1;;2223:12:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2198:13;;2223:12;;2230:5;;2223:12;;2230:5;2223:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2153:89;:::o;4229:166::-;4312:4;4328:39;4337:12;:10;:12::i;:::-;4351:7;4360:6;4328:8;:39::i;:::-;-1:-1:-1;4384:4:24;4229:166;;;;:::o;3220:106::-;3307:12;;3220:106;:::o;4862:317::-;4968:4;4984:36;4994:6;5002:9;5013:6;4984:9;:36::i;:::-;5030:121;5039:6;5047:12;:10;:12::i;:::-;5061:89;5099:6;5061:89;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5061:19:24;;;;;;:11;:19;;;;;;5081:12;:10;:12::i;:::-;-1:-1:-1;;;;;5061:33:24;;;;;;;;;;;;-1:-1:-1;5061:33:24;;;:89;:37;:89::i;:::-;5030:8;:121::i;:::-;-1:-1:-1;5168:4:24;4862:317;;;;;:::o;3071:89::-;3144:9;;;;3071:89;:::o;5574:215::-;5662:4;5678:83;5687:12;:10;:12::i;:::-;5701:7;5710:50;5749:10;5710:11;:25;5722:12;:10;:12::i;:::-;-1:-1:-1;;;;;5710:25:24;;;;;;;;;;;;;;;;;-1:-1:-1;5710:25:24;;;:34;;;;;;;;;;;:38;:50::i;709:89:17:-;782:8;775:15;;;;;;;;-1:-1:-1;;775:15:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;749:13;;775:15;;782:8;;775:15;;782:8;775:15;;;;;;;;;;;;;;;;;;;;;;;;3384:125:24;-1:-1:-1;;;;;3484:18:24;3458:7;3484:18;;;;;;;;;;;;3384:125::o;540:93:17:-;582:13;615:10;;;;;;;;;;;;;;;;;608:17;;540:93;:::o;2355::24:-;2434:7;2427:14;;;;;;;;-1:-1:-1;;2427:14:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2402:13;;2427:14;;2434:7;;2427:14;;2434:7;2427:14;;;;;;;;;;;;;;;;;;;;;;;;6276:266;6369:4;6385:129;6394:12;:10;:12::i;:::-;6408:7;6417:96;6456:15;6417:96;;;;;;;;;;;;;;;;;:11;:25;6429:12;:10;:12::i;:::-;-1:-1:-1;;;;;6417:25:24;;;;;;;;;;;;;;;;;-1:-1:-1;6417:25:24;;;:34;;;;;;;;;;;:96;:38;:96::i;3712:172::-;3798:4;3814:42;3824:12;:10;:12::i;:::-;3838:9;3849:6;3814:9;:42::i;3942:149::-;-1:-1:-1;;;;;4057:18:24;;;4031:7;4057:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3942:149::o;2682:175:23:-;2740:7;2771:5;;;2794:6;;;;2786:46;;;;;-1:-1:-1;;;2786:46:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;2849:1;2682:175;-1:-1:-1;;;2682:175:23:o;598:104:30:-;685:10;598:104;:::o;9340:340:24:-;-1:-1:-1;;;;;9441:19:24;;9433:68;;;;-1:-1:-1;;;9433:68:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;9519:21:24;;9511:68;;;;-1:-1:-1;;;9511:68:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;9590:18:24;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;9641:32;;;;;;;;;;;;;;;;;9340:340;;;:::o;7016:530::-;-1:-1:-1;;;;;7121:20:24;;7113:70;;;;-1:-1:-1;;;7113:70:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7201:23:24;;7193:71;;;;-1:-1:-1;;;7193:71:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7275:47;7296:6;7304:9;7315:6;7275:20;:47::i;:::-;7353:71;7375:6;7353:71;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7353:17:24;;:9;:17;;;;;;;;;;;;:71;:21;:71::i;:::-;-1:-1:-1;;;;;7333:17:24;;;:9;:17;;;;;;;;;;;:91;;;;7457:20;;;;;;;:32;;7482:6;7457:24;:32::i;:::-;-1:-1:-1;;;;;7434:20:24;;;:9;:20;;;;;;;;;;;;:55;;;;7504:35;;;;;;;7434:20;;7504:35;;;;;;;;;;;;;7016:530;;;:::o;5424:163:23:-;5510:7;5545:12;5537:6;;;;5529:29;;;;-1:-1:-1;;;5529:29:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5575:5:23;;;5424:163::o;10686:92:24:-;;;;:::o",
  "source": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.7.0;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\n\r\nimport \"../../service/ServicePayer.sol\";\r\nimport \"../../utils/GeneratorCopyright.sol\";\r\n\r\n/**\r\n * @title SimpleERC20\r\n * @author ERC20 Generator (https://vittominacori.github.io/erc20-generator)\r\n * @dev Implementation of the SimpleERC20\r\n */\r\ncontract SimpleERC20 is ERC20, ServicePayer, GeneratorCopyright(\"v4.6.0\") {\r\n\r\n    constructor (\r\n        string memory name,\r\n        string memory symbol,\r\n        uint256 initialBalance,\r\n        address payable feeReceiver\r\n    )\r\n        ERC20(name, symbol)\r\n        ServicePayer(feeReceiver, \"SimpleERC20\")\r\n        payable\r\n    {\r\n        require(initialBalance > 0, \"SimpleERC20: supply cannot be zero\");\r\n\r\n        _mint(_msgSender(), initialBalance);\r\n    }\r\n}\r\n",
  "sourcePath": "Y:/Github/erc20-generator/contracts/token/ERC20/SimpleERC20.sol",
  "ast": {
    "absolutePath": "/Y/Github/erc20-generator/contracts/token/ERC20/SimpleERC20.sol",
    "exportedSymbols": {
      "Context": [
        3292
      ],
      "ERC20": [
        2720
      ],
      "GeneratorCopyright": [
        1172
      ],
      "IERC20": [
        2973
      ],
      "IPayable": [
        225
      ],
      "SafeMath": [
        2217
      ],
      "ServicePayer": [
        245
      ],
      "SimpleERC20": [
        932
      ]
    },
    "id": 933,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 887,
        "literals": [
          "solidity",
          "^",
          "0.7",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "35:23:13"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 888,
        "nodeType": "ImportDirective",
        "scope": 933,
        "sourceUnit": 2721,
        "src": "62:55:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Y/Github/erc20-generator/contracts/service/ServicePayer.sol",
        "file": "../../service/ServicePayer.sol",
        "id": 889,
        "nodeType": "ImportDirective",
        "scope": 933,
        "sourceUnit": 246,
        "src": "121:40:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Y/Github/erc20-generator/contracts/utils/GeneratorCopyright.sol",
        "file": "../../utils/GeneratorCopyright.sol",
        "id": 890,
        "nodeType": "ImportDirective",
        "scope": 933,
        "sourceUnit": 1173,
        "src": "163:44:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 892,
              "name": "ERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2720,
              "src": "389:5:13",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$2720",
                "typeString": "contract ERC20"
              }
            },
            "id": 893,
            "nodeType": "InheritanceSpecifier",
            "src": "389:5:13"
          },
          {
            "baseName": {
              "id": 894,
              "name": "ServicePayer",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 245,
              "src": "396:12:13",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ServicePayer_$245",
                "typeString": "contract ServicePayer"
              }
            },
            "id": 895,
            "nodeType": "InheritanceSpecifier",
            "src": "396:12:13"
          },
          {
            "arguments": [
              {
                "hexValue": "76342e362e30",
                "id": 897,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "string",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "429:8:13",
                "typeDescriptions": {
                  "typeIdentifier": "t_stringliteral_1cc1a913158b842f5d4ceea49f44b37c694b11ef904f0f6fdd0dd14d06fba478",
                  "typeString": "literal_string \"v4.6.0\""
                },
                "value": "v4.6.0"
              }
            ],
            "baseName": {
              "id": 896,
              "name": "GeneratorCopyright",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1172,
              "src": "410:18:13",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_GeneratorCopyright_$1172",
                "typeString": "contract GeneratorCopyright"
              }
            },
            "id": 898,
            "nodeType": "InheritanceSpecifier",
            "src": "410:28:13"
          }
        ],
        "contractDependencies": [
          245,
          1172,
          2720,
          2973,
          3292
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 891,
          "nodeType": "StructuredDocumentation",
          "src": "211:152:13",
          "text": " @title SimpleERC20\n @author ERC20 Generator (https://vittominacori.github.io/erc20-generator)\n @dev Implementation of the SimpleERC20"
        },
        "fullyImplemented": true,
        "id": 932,
        "linearizedBaseContracts": [
          932,
          1172,
          245,
          2720,
          2973,
          3292
        ],
        "name": "SimpleERC20",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 930,
              "nodeType": "Block",
              "src": "700:132:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 920,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 918,
                          "name": "initialBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 904,
                          "src": "719:14:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 919,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "736:1:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "719:18:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "53696d706c6545524332303a20737570706c792063616e6e6f74206265207a65726f",
                        "id": 921,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "739:36:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6ce245e08b1088a1bd3351d15a0e459bad933d89df50a52e838d92bcf3b019f2",
                          "typeString": "literal_string \"SimpleERC20: supply cannot be zero\""
                        },
                        "value": "SimpleERC20: supply cannot be zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6ce245e08b1088a1bd3351d15a0e459bad933d89df50a52e838d92bcf3b019f2",
                          "typeString": "literal_string \"SimpleERC20: supply cannot be zero\""
                        }
                      ],
                      "id": 917,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "711:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 922,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "711:65:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 923,
                  "nodeType": "ExpressionStatement",
                  "src": "711:65:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 925,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3280,
                          "src": "795:10:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                            "typeString": "function () view returns (address payable)"
                          }
                        },
                        "id": 926,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "795:12:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 927,
                        "name": "initialBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 904,
                        "src": "809:14:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 924,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2596,
                      "src": "789:5:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 928,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "789:35:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 929,
                  "nodeType": "ExpressionStatement",
                  "src": "789:35:13"
                }
              ]
            },
            "id": 931,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 909,
                    "name": "name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 900,
                    "src": "614:4:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 910,
                    "name": "symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 902,
                    "src": "620:6:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 911,
                "modifierName": {
                  "id": 908,
                  "name": "ERC20",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2720,
                  "src": "608:5:13",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC20_$2720_$",
                    "typeString": "type(contract ERC20)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "608:19:13"
              },
              {
                "arguments": [
                  {
                    "id": 913,
                    "name": "feeReceiver",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 906,
                    "src": "650:11:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  {
                    "hexValue": "53696d706c654552433230",
                    "id": 914,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "663:13:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_8ea9ba99bc1a89474bc6e8c4adb1345cf3f4e6761c558c4f573b28c018dc38ec",
                      "typeString": "literal_string \"SimpleERC20\""
                    },
                    "value": "SimpleERC20"
                  }
                ],
                "id": 915,
                "modifierName": {
                  "id": 912,
                  "name": "ServicePayer",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 245,
                  "src": "637:12:13",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ServicePayer_$245_$",
                    "typeString": "type(contract ServicePayer)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "637:40:13"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 907,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 900,
                  "mutability": "mutable",
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 931,
                  "src": "471:18:13",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 899,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "471:6:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 902,
                  "mutability": "mutable",
                  "name": "symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 931,
                  "src": "500:20:13",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 901,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "500:6:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 904,
                  "mutability": "mutable",
                  "name": "initialBalance",
                  "nodeType": "VariableDeclaration",
                  "scope": 931,
                  "src": "531:22:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 903,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "531:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 906,
                  "mutability": "mutable",
                  "name": "feeReceiver",
                  "nodeType": "VariableDeclaration",
                  "scope": 931,
                  "src": "564:27:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 905,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "564:15:13",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "460:138:13"
            },
            "returnParameters": {
              "id": 916,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "700:0:13"
            },
            "scope": 932,
            "src": "448:384:13",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 933,
        "src": "365:470:13"
      }
    ],
    "src": "35:802:13"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "/Y/Github/erc20-generator/contracts/token/ERC20/SimpleERC20.sol",
      "exportedSymbols": {
        "Context": [
          3292
        ],
        "ERC20": [
          2720
        ],
        "GeneratorCopyright": [
          1172
        ],
        "IERC20": [
          2973
        ],
        "IPayable": [
          225
        ],
        "SafeMath": [
          2217
        ],
        "ServicePayer": [
          245
        ],
        "SimpleERC20": [
          932
        ]
      },
      "license": "MIT"
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            "^",
            "0.7",
            ".0"
          ]
        },
        "id": 887,
        "name": "PragmaDirective",
        "src": "35:23:13"
      },
      {
        "attributes": {
          "SourceUnit": 2721,
          "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
          "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
          "scope": 933,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 888,
        "name": "ImportDirective",
        "src": "62:55:13"
      },
      {
        "attributes": {
          "SourceUnit": 246,
          "absolutePath": "/Y/Github/erc20-generator/contracts/service/ServicePayer.sol",
          "file": "../../service/ServicePayer.sol",
          "scope": 933,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 889,
        "name": "ImportDirective",
        "src": "121:40:13"
      },
      {
        "attributes": {
          "SourceUnit": 1173,
          "absolutePath": "/Y/Github/erc20-generator/contracts/utils/GeneratorCopyright.sol",
          "file": "../../utils/GeneratorCopyright.sol",
          "scope": 933,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 890,
        "name": "ImportDirective",
        "src": "163:44:13"
      },
      {
        "attributes": {
          "abstract": false,
          "contractDependencies": [
            245,
            1172,
            2720,
            2973,
            3292
          ],
          "contractKind": "contract",
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            932,
            1172,
            245,
            2720,
            2973,
            3292
          ],
          "name": "SimpleERC20",
          "scope": 933
        },
        "children": [
          {
            "attributes": {
              "text": " @title SimpleERC20\n @author ERC20 Generator (https://vittominacori.github.io/erc20-generator)\n @dev Implementation of the SimpleERC20"
            },
            "id": 891,
            "name": "StructuredDocumentation",
            "src": "211:152:13"
          },
          {
            "attributes": {},
            "children": [
              {
                "attributes": {
                  "name": "ERC20",
                  "referencedDeclaration": 2720,
                  "type": "contract ERC20"
                },
                "id": 892,
                "name": "UserDefinedTypeName",
                "src": "389:5:13"
              }
            ],
            "id": 893,
            "name": "InheritanceSpecifier",
            "src": "389:5:13"
          },
          {
            "attributes": {},
            "children": [
              {
                "attributes": {
                  "name": "ServicePayer",
                  "referencedDeclaration": 245,
                  "type": "contract ServicePayer"
                },
                "id": 894,
                "name": "UserDefinedTypeName",
                "src": "396:12:13"
              }
            ],
            "id": 895,
            "name": "InheritanceSpecifier",
            "src": "396:12:13"
          },
          {
            "children": [
              {
                "attributes": {
                  "name": "GeneratorCopyright",
                  "referencedDeclaration": 1172,
                  "type": "contract GeneratorCopyright"
                },
                "id": 896,
                "name": "UserDefinedTypeName",
                "src": "410:18:13"
              },
              {
                "attributes": {
                  "hexvalue": "76342e362e30",
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "token": "string",
                  "type": "literal_string \"v4.6.0\"",
                  "value": "v4.6.0"
                },
                "id": 897,
                "name": "Literal",
                "src": "429:8:13"
              }
            ],
            "id": 898,
            "name": "InheritanceSpecifier",
            "src": "410:28:13"
          },
          {
            "attributes": {
              "implemented": true,
              "isConstructor": true,
              "kind": "constructor",
              "name": "",
              "scope": 932,
              "stateMutability": "payable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "name",
                      "scope": 931,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 899,
                        "name": "ElementaryTypeName",
                        "src": "471:6:13"
                      }
                    ],
                    "id": 900,
                    "name": "VariableDeclaration",
                    "src": "471:18:13"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "symbol",
                      "scope": 931,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 901,
                        "name": "ElementaryTypeName",
                        "src": "500:6:13"
                      }
                    ],
                    "id": 902,
                    "name": "VariableDeclaration",
                    "src": "500:20:13"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "initialBalance",
                      "scope": 931,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 903,
                        "name": "ElementaryTypeName",
                        "src": "531:7:13"
                      }
                    ],
                    "id": 904,
                    "name": "VariableDeclaration",
                    "src": "531:22:13"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "feeReceiver",
                      "scope": 931,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address payable",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "payable",
                          "type": "address payable"
                        },
                        "id": 905,
                        "name": "ElementaryTypeName",
                        "src": "564:15:13"
                      }
                    ],
                    "id": 906,
                    "name": "VariableDeclaration",
                    "src": "564:27:13"
                  }
                ],
                "id": 907,
                "name": "ParameterList",
                "src": "460:138:13"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 916,
                "name": "ParameterList",
                "src": "700:0:13"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 2720,
                      "type": "type(contract ERC20)",
                      "value": "ERC20"
                    },
                    "id": 908,
                    "name": "Identifier",
                    "src": "608:5:13"
                  },
                  {
                    "attributes": {
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 900,
                      "type": "string memory",
                      "value": "name"
                    },
                    "id": 909,
                    "name": "Identifier",
                    "src": "614:4:13"
                  },
                  {
                    "attributes": {
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 902,
                      "type": "string memory",
                      "value": "symbol"
                    },
                    "id": 910,
                    "name": "Identifier",
                    "src": "620:6:13"
                  }
                ],
                "id": 911,
                "name": "ModifierInvocation",
                "src": "608:19:13"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 245,
                      "type": "type(contract ServicePayer)",
                      "value": "ServicePayer"
                    },
                    "id": 912,
                    "name": "Identifier",
                    "src": "637:12:13"
                  },
                  {
                    "attributes": {
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 906,
                      "type": "address payable",
                      "value": "feeReceiver"
                    },
                    "id": 913,
                    "name": "Identifier",
                    "src": "650:11:13"
                  },
                  {
                    "attributes": {
                      "hexvalue": "53696d706c654552433230",
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "token": "string",
                      "type": "literal_string \"SimpleERC20\"",
                      "value": "SimpleERC20"
                    },
                    "id": 914,
                    "name": "Literal",
                    "src": "663:13:13"
                  }
                ],
                "id": 915,
                "name": "ModifierInvocation",
                "src": "637:40:13"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_6ce245e08b1088a1bd3351d15a0e459bad933d89df50a52e838d92bcf3b019f2",
                                  "typeString": "literal_string \"SimpleERC20: supply cannot be zero\""
                                }
                              ],
                              "overloadedDeclarations": [
                                4294967278,
                                4294967278
                              ],
                              "referencedDeclaration": 4294967278,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 917,
                            "name": "Identifier",
                            "src": "711:7:13"
                          },
                          {
                            "attributes": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": ">",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 904,
                                  "type": "uint256",
                                  "value": "initialBalance"
                                },
                                "id": 918,
                                "name": "Identifier",
                                "src": "719:14:13"
                              },
                              {
                                "attributes": {
                                  "hexvalue": "30",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "token": "number",
                                  "type": "int_const 0",
                                  "value": "0"
                                },
                                "id": 919,
                                "name": "Literal",
                                "src": "736:1:13"
                              }
                            ],
                            "id": 920,
                            "name": "BinaryOperation",
                            "src": "719:18:13"
                          },
                          {
                            "attributes": {
                              "hexvalue": "53696d706c6545524332303a20737570706c792063616e6e6f74206265207a65726f",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"SimpleERC20: supply cannot be zero\"",
                              "value": "SimpleERC20: supply cannot be zero"
                            },
                            "id": 921,
                            "name": "Literal",
                            "src": "739:36:13"
                          }
                        ],
                        "id": 922,
                        "name": "FunctionCall",
                        "src": "711:65:13"
                      }
                    ],
                    "id": 923,
                    "name": "ExpressionStatement",
                    "src": "711:65:13"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 2596,
                              "type": "function (address,uint256)",
                              "value": "_mint"
                            },
                            "id": 924,
                            "name": "Identifier",
                            "src": "789:5:13"
                          },
                          {
                            "attributes": {
                              "arguments": [
                                null
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "address payable",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    null
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 3280,
                                  "type": "function () view returns (address payable)",
                                  "value": "_msgSender"
                                },
                                "id": 925,
                                "name": "Identifier",
                                "src": "795:10:13"
                              }
                            ],
                            "id": 926,
                            "name": "FunctionCall",
                            "src": "795:12:13"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 904,
                              "type": "uint256",
                              "value": "initialBalance"
                            },
                            "id": 927,
                            "name": "Identifier",
                            "src": "809:14:13"
                          }
                        ],
                        "id": 928,
                        "name": "FunctionCall",
                        "src": "789:35:13"
                      }
                    ],
                    "id": 929,
                    "name": "ExpressionStatement",
                    "src": "789:35:13"
                  }
                ],
                "id": 930,
                "name": "Block",
                "src": "700:132:13"
              }
            ],
            "id": 931,
            "name": "FunctionDefinition",
            "src": "448:384:13"
          }
        ],
        "id": 932,
        "name": "ContractDefinition",
        "src": "365:470:13"
      }
    ],
    "id": 933,
    "name": "SourceUnit",
    "src": "35:802:13"
  },
  "compiler": {
    "name": "solc",
    "version": "0.7.6+commit.7338295f.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.1",
  "updatedAt": "2021-06-03T07:49:22.305Z",
  "devdoc": {
    "author": "ERC20 Generator (https://vittominacori.github.io/erc20-generator)",
    "details": "Implementation of the SimpleERC20",
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "generator()": {
        "details": "Returns the token generator tool."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
      },
      "version()": {
        "details": "Returns the token generator version."
      }
    },
    "title": "SimpleERC20",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}